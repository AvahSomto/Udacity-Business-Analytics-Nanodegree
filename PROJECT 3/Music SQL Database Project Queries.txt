/* Query 1 - query used for first insight */
SELECT Customer.email, Customer.firstName, Customer.lastName, Genre.name AS genre, COUNT(Track.trackId) AS trackCount
FROM Customer
JOIN Invoice ON Customer.customerId = Invoice.customerId
JOIN InvoiceLine ON Invoice.invoiceId = InvoiceLine.invoiceId
JOIN Track ON InvoiceLine.trackId = Track.trackId
JOIN Genre ON Track.genreId = Genre.genreId
WHERE Genre.name = 'Rock'
GROUP BY Customer.email, Customer.firstName, Customer.lastName, Genre.name
ORDER BY Customer.email ASC;

/* Query 2 - query used for second insight */
SELECT Artist.Name, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalEarnings, COUNT(*) AS TotalInvoices
FROM Artist
JOIN Album ON Artist.ArtistId = Album.ArtistId
JOIN Track ON Album.AlbumId = Track.AlbumId
JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId
JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId
JOIN Customer ON Invoice.CustomerId = Customer.CustomerId
GROUP BY Artist.Name
ORDER BY TotalEarnings DESC
LIMIT 10;



/* Query 3 - query used for third insight */
SELECT Artist.Name, COUNT(DISTINCT Album.AlbumId) AS AlbumCount, SUM(InvoiceLine.UnitPrice * InvoiceLine.Quantity) AS TotalEarnings
FROM Artist
JOIN Album ON Artist.ArtistId = Album.ArtistId
JOIN Track ON Album.AlbumId = Track.AlbumId
JOIN InvoiceLine ON Track.TrackId = InvoiceLine.TrackId
JOIN Invoice ON InvoiceLine.InvoiceId = Invoice.InvoiceId
JOIN Customer ON Invoice.CustomerId = Customer.CustomerId
GROUP BY Artist.Name
ORDER BY AlbumCount DESC
LIMIT 10;






/* Query 4 - query used for fourth insight */
SELECT c.Country, c.FirstName || ' ' || c.LastName AS CustomerName, MAX(i.Total) AS MaxSpending, COUNT(*) AS TotalInvoices
FROM Customer c
JOIN Invoice i ON c.CustomerId = i.CustomerId
WHERE i.InvoiceId IN (
    SELECT InvoiceId
    FROM Invoice
    WHERE BillingCountry = c.Country
    ORDER BY Total DESC
    LIMIT 1
)
GROUP BY c.Country, CustomerName;
